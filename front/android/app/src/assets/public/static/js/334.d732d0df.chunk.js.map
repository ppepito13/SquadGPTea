{"version":3,"file":"static/js/334.d732d0df.chunk.js","mappings":"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","sources":["../node_modules/@capacitor/local-notifications/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport type { PermissionState } from '@capacitor/core';\n\nimport type {\n  DeliveredNotifications,\n  EnabledResult,\n  ListChannelsResult,\n  LocalNotificationSchema,\n  LocalNotificationsPlugin,\n  PendingResult,\n  PermissionStatus,\n  ScheduleOptions,\n  ScheduleResult,\n} from './definitions';\n\nexport class LocalNotificationsWeb\n  extends WebPlugin\n  implements LocalNotificationsPlugin\n{\n  protected pending: LocalNotificationSchema[] = [];\n  protected deliveredNotifications: Notification[] = [];\n\n  async getDeliveredNotifications(): Promise<DeliveredNotifications> {\n    const deliveredSchemas = [];\n    for (const notification of this.deliveredNotifications) {\n      const deliveredSchema: LocalNotificationSchema = {\n        title: notification.title,\n        id: parseInt(notification.tag),\n        body: notification.body,\n      };\n      deliveredSchemas.push(deliveredSchema);\n    }\n    return {\n      notifications: deliveredSchemas,\n    };\n  }\n  async removeDeliveredNotifications(\n    delivered: DeliveredNotifications,\n  ): Promise<void> {\n    for (const toRemove of delivered.notifications) {\n      const found = this.deliveredNotifications.find(\n        n => n.tag === String(toRemove.id),\n      );\n      found?.close();\n      this.deliveredNotifications = this.deliveredNotifications.filter(\n        () => !found,\n      );\n    }\n  }\n  async removeAllDeliveredNotifications(): Promise<void> {\n    for (const notification of this.deliveredNotifications) {\n      notification.close();\n    }\n    this.deliveredNotifications = [];\n  }\n  async createChannel(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async deleteChannel(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async listChannels(): Promise<ListChannelsResult> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async schedule(options: ScheduleOptions): Promise<ScheduleResult> {\n    if (!this.hasNotificationSupport()) {\n      throw this.unavailable('Notifications not supported in this browser.');\n    }\n\n    for (const notification of options.notifications) {\n      this.sendNotification(notification);\n    }\n\n    return {\n      notifications: options.notifications.map(notification => ({\n        id: notification.id,\n      })),\n    };\n  }\n\n  async getPending(): Promise<PendingResult> {\n    return {\n      notifications: this.pending,\n    };\n  }\n\n  async registerActionTypes(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async cancel(pending: ScheduleResult): Promise<void> {\n    this.pending = this.pending.filter(\n      notification =>\n        !pending.notifications.find(n => n.id === notification.id),\n    );\n  }\n\n  async areEnabled(): Promise<EnabledResult> {\n    const { display } = await this.checkPermissions();\n\n    return {\n      value: display === 'granted',\n    };\n  }\n\n  async requestPermissions(): Promise<PermissionStatus> {\n    if (!this.hasNotificationSupport()) {\n      throw this.unavailable('Notifications not supported in this browser.');\n    }\n\n    const display = this.transformNotificationPermission(\n      await Notification.requestPermission(),\n    );\n\n    return { display };\n  }\n\n  async checkPermissions(): Promise<PermissionStatus> {\n    if (!this.hasNotificationSupport()) {\n      throw this.unavailable('Notifications not supported in this browser.');\n    }\n\n    const display = this.transformNotificationPermission(\n      Notification.permission,\n    );\n\n    return { display };\n  }\n\n  protected hasNotificationSupport = (): boolean => {\n    if (!('Notification' in window) || !Notification.requestPermission) {\n      return false;\n    }\n\n    if (Notification.permission !== 'granted') {\n      // don't test for `new Notification` if permission has already been granted\n      // otherwise this sends a real notification on supported browsers\n      try {\n        new Notification('');\n      } catch (e) {\n        if (e.name == 'TypeError') {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  protected transformNotificationPermission(\n    permission: NotificationPermission,\n  ): PermissionState {\n    switch (permission) {\n      case 'granted':\n        return 'granted';\n      case 'denied':\n        return 'denied';\n      default:\n        return 'prompt';\n    }\n  }\n\n  protected sendPending(): void {\n    const toRemove: LocalNotificationSchema[] = [];\n    const now = new Date().getTime();\n\n    for (const notification of this.pending) {\n      if (\n        notification.schedule?.at &&\n        notification.schedule.at.getTime() <= now\n      ) {\n        this.buildNotification(notification);\n        toRemove.push(notification);\n      }\n    }\n\n    this.pending = this.pending.filter(\n      notification => !toRemove.find(n => n === notification),\n    );\n  }\n\n  protected sendNotification(notification: LocalNotificationSchema): void {\n    if (notification.schedule?.at) {\n      const diff = notification.schedule.at.getTime() - new Date().getTime();\n\n      this.pending.push(notification);\n      setTimeout(() => {\n        this.sendPending();\n      }, diff);\n      return;\n    }\n    this.buildNotification(notification);\n  }\n\n  protected buildNotification(\n    notification: LocalNotificationSchema,\n  ): Notification {\n    const localNotification = new Notification(notification.title, {\n      body: notification.body,\n      tag: String(notification.id),\n    });\n    localNotification.addEventListener(\n      'click',\n      this.onClick.bind(this, notification),\n      false,\n    );\n    localNotification.addEventListener(\n      'show',\n      this.onShow.bind(this, notification),\n      false,\n    );\n    localNotification.addEventListener(\n      'close',\n      () => {\n        this.deliveredNotifications = this.deliveredNotifications.filter(\n          () => !this,\n        );\n      },\n      false,\n    );\n    this.deliveredNotifications.push(localNotification);\n    return localNotification;\n  }\n\n  protected onClick(notification: LocalNotificationSchema): void {\n    const data = {\n      actionId: 'tap',\n      notification,\n    };\n    this.notifyListeners('localNotificationActionPerformed', data);\n  }\n\n  protected onShow(notification: LocalNotificationSchema): void {\n    this.notifyListeners('localNotificationReceived', notification);\n  }\n}\n"],"names":["LocalNotificationsWeb","_WebPlugin","_inherits","_super","_createSuper","_this","_classCallCheck","pending","deliveredNotifications","hasNotificationSupport","window","Notification","requestPermission","permission","e","name","_createClass","key","value","_getDeliveredNotifications","_asyncToGenerator","_regeneratorRuntime","mark","_callee","deliveredSchemas","_iterator","_step","notification","deliveredSchema","wrap","_context","prev","next","_createForOfIteratorHelper","this","s","n","done","title","id","parseInt","tag","body","push","err","f","abrupt","notifications","stop","apply","arguments","_removeDeliveredNotifications","_callee2","delivered","_iterator2","_step2","_loop","_this2","_context3","toRemove","found","_context2","find","String","close","filter","delegateYield","t1","finish","_x","_removeAllDeliveredNotifications","_callee3","_iterator3","_step3","_context4","_createChannel","_callee4","_context5","unimplemented","_deleteChannel","_callee5","_context6","_listChannels","_callee6","_context7","_schedule","_callee7","options","_iterator4","_step4","_context8","unavailable","sendNotification","map","_x2","_getPending","_callee8","_context9","_registerActionTypes","_callee9","_context10","_cancel","_callee10","_context11","_x3","_areEnabled","_callee11","_yield$this$checkPerm","display","_context12","checkPermissions","sent","_requestPermissions","_callee12","_context13","t0","transformNotificationPermission","call","_checkPermissions","_callee13","_context14","_step5","now","Date","getTime","_iterator5","_a","schedule","at","buildNotification","_this3","diff","setTimeout","sendPending","_this4","localNotification","addEventListener","onClick","bind","onShow","data","actionId","notifyListeners","WebPlugin"],"sourceRoot":""}